library(tidyverse)
library(knitr)
knit2html("Introductionmd.md", "Introductionmd.html")
setwd(/Users/Tegveer/anly-501-project-TegveerG/501-project-website/pages)
setwd(Users/Tegveer/anly-501-project-TegveerG/501-project-website/pages)
setwd(Tegveer/anly-501-project-TegveerG/501-project-website/pages)
setwd("Tegveer/anly-501-project-TegveerG/501-project-website/pages")
setwd("~/anly-501-project-TegveerG")
setwd("~/anly-501-project-TegveerG/501-project-website/pages")
knit2html("Introductionmd.md", "Introductionmd.html")
### Load libraries here
library("selectr")
library("rvest")
library("xml2")
library(rtweet) # for scraping tweets
library(wordcloud2) # for generating really cool looking wordclouds
library(tm) # for text mining
library(tidyverse)
library(twitteR)
library(ROAuth)
library(jsonlite)
consumerKey = '05RsErguXYWBfMpmmZdZlbV6P'
consumerSecret = 'Vr50qRwylJGRr1TtANB6RalqT90dTuq8hlBvoT8WCnYTS5Ni70'
access_Token = '1512312564-pbSid3qWEdigyAalZcII1d2ZF4rQ2WkiYfHf60k'
access_Secret = 'O9XEwsekAJLKkn0HxZ0VhOE7sIJ9VQawNgde4hXhkE0rb'
### Properly parse our API keys
consumerKey=as.character(consumerKey)
consumerSecret=as.character(consumerSecret)
access_Token=as.character(access_Token)
access_Secret=as.character(access_Secret)
##################################################################
### Ensure the right URLs are stored to pull data
requestURL='https://api.twitter.com/oauth/request_token'
accessURL='https://api.twitter.com/oauth/access_token'
authURL='https://api.twitter.com/oauth/authorize'
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter("crypto AND attack",n=500, since="2019-01-01")
TweetsDF<- twListToDF(Search1)
########## Place Tweets in a new file ###################
FName = "Crypto_Tweets_R.txt"
## Start the file
MyFile <- file(FName)
## Write Tweets to file
cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
close(MyFile)
TweetsDF = twListToDF(Search1)
TweetsDF$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF$text) # remove alphanumeric characters
TweetsDF$text <- gsub("https\\S*", "",TweetsDF$text) # remove hyperlinks
TweetsDF$text <- gsub("&amp", "and",TweetsDF$text) # replace ampersand symbol with "and"
#create a corpus to allow us clean the text column with tm
tweets.corpus <- Corpus(VectorSource(TweetsDF$text))
tweets.corpus <- tweets.corpus %>%
tm_map(removeNumbers) %>% # removes numbers from text
tm_map(removePunctuation) %>% # removes punctuation from text
tm_map(stripWhitespace) %>% # trims the text of whitespace
tm_map(content_transformer(tolower)) %>% # convert text to lowercase
tm_map(removeWords,stopwords("english")) %>% # remove stopwords
tm_map(removeWords,stopwords("SMART")) # remove stopwords not removed from previous line
View(TweetsDF)
length(TweetsDF)
nrow(TweetsDF)
### Load libraries here
library("selectr")
library("rvest")
library("xml2")
library(rtweet) # for scraping tweets
library(wordcloud2) # for generating really cool looking wordclouds
library(tm) # for text mining
library(tidyverse)
library(twitteR)
library(ROAuth)
library(jsonlite)
consumerKey = '05RsErguXYWBfMpmmZdZlbV6P'
consumerSecret = 'Vr50qRwylJGRr1TtANB6RalqT90dTuq8hlBvoT8WCnYTS5Ni70'
access_Token = '1512312564-pbSid3qWEdigyAalZcII1d2ZF4rQ2WkiYfHf60k'
access_Secret = 'O9XEwsekAJLKkn0HxZ0VhOE7sIJ9VQawNgde4hXhkE0rb'
### Properly parse our API keys
consumerKey=as.character(consumerKey)
consumerSecret=as.character(consumerSecret)
access_Token=as.character(access_Token)
access_Secret=as.character(access_Secret)
##################################################################
### Ensure the right URLs are stored to pull data
requestURL='https://api.twitter.com/oauth/request_token'
accessURL='https://api.twitter.com/oauth/access_token'
authURL='https://api.twitter.com/oauth/authorize'
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter("crypto++crime",n=1000, since="2017-01-01", until="2022-09-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter("crypto+crime",n=500, since="2017-01-01", until="2022-09-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter("crypto+crime",n=100, since="2017-01-01", until="2022-09-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter("crypto + crime",n=100, since="2017-01-01", until="2022-09-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter("crypto + crime",n=100, since="2015-01-01", until="2022-09-01", lang = "en", resultType="mixed")
TweetsDF<- twListToDF(Search1)
len(Search1)
length(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime",n=50, since="2015-01-01", until="2022-09-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime",n=50, since="2015-01-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime",n=50, since="2015-01-01", lang = "en", resultType="mixed")
TweetsDF<- twListToDF(Search1)
########## Place Tweets in a new file ###################
FName = "Crypto_Tweets_R.txt"
## Start the file
MyFile <- file(FName)
## Write Tweets to file
cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
close(MyFile)
TweetsDF = twListToDF(Search1)
TweetsDF$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF$text) # remove alphanumeric characters
TweetsDF$text <- gsub("https\\S*", "",TweetsDF$text) # remove hyperlinks
TweetsDF$text <- gsub("&amp", "and",TweetsDF$text) # replace ampersand symbol with "and"
TweetsDF
View(TweetsDF)
View(TweetsDF)
nrow(TweetsDF)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime",n=500, since="2015-01-01", lang = "en", resultType="mixed")
TweetsDF<- twListToDF(Search1)
########## Place Tweets in a new file ###################
FName = "Crypto_Tweets_R_raw.txt"
## Start the file
MyFile <- file(FName)
## Write Tweets to file
cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
close(MyFile)
TweetsDF = twListToDF(Search1)
TweetsDF$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF$text) # remove alphanumeric characters
TweetsDF$text <- gsub("https\\S*", "",TweetsDF$text) # remove hyperlinks
TweetsDF$text <- gsub("&amp", "and",TweetsDF$text) # replace ampersand symbol with "and"
#create a corpus to allow us clean the text column with tm
tweets.corpus <- Corpus(VectorSource(TweetsDF$text))
tweets.corpus <- tweets.corpus %>%
tm_map(removeNumbers) %>% # removes numbers from text
tm_map(removePunctuation) %>% # removes punctuation from text
tm_map(stripWhitespace) %>% # trims the text of whitespace
tm_map(content_transformer(tolower)) %>% # convert text to lowercase
tm_map(removeWords,stopwords("english")) %>% # remove stopwords
tm_map(removeWords,stopwords("SMART")) # remove stopwords not removed from previous line
FName = "Crypto_Tweets_R_clean.txt"
## Start the file
MyFile <- file(FName)
## Write Tweets to file
cat(unlist(tweets.corpus), " ", file=MyFile, sep="\n")
close(MyFile)
tdm <- TermDocumentMatrix(tweets.corpus) %>% # create a term document matrix
as.matrix()
words <- sort(rowSums(tdm), decreasing = TRUE) # count all occurrences of each word and group them
df_tdm <- data.frame(word = names(words), freq = words) # convert it to a dataframe
rownames(df_tdm) <- 1:nrow(df_tdm) #assigning index numbers to our df
head(df_tdm) # visualize!
set.seed(123)
wcloud <- wordcloud2(df_tdm,   # generate word cloud
size = 0.75,
color= 'random-dark', # set colors
#shape = 'pentagon',
rotateRatio = 0)
wcloud
View(TweetsDF)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime", since="2015-01-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="#crypto + #crime", since="2015-01-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="#crypto + #crime", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="#cybersecurity + #crypto", n=500, since="2015-01-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="#cybersecurity", n=500, since="2015-01-01", lang = "en", resultType="popular")
TweetsDF<- twListToDF(Search1)
########## Place Tweets in a new file ###################
FName = "Crypto_Tweets_R_raw.txt"
## Start the file
MyFile <- file(FName)
## Write Tweets to file
cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
close(MyFile)
TweetsDF = twListToDF(Search1)
TweetsDF$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF$text) # remove alphanumeric characters
TweetsDF$text <- gsub("https\\S*", "",TweetsDF$text) # remove hyperlinks
TweetsDF$text <- gsub("&amp", "and",TweetsDF$text) # replace ampersand symbol with "and"
View(TweetsDF)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="#cybersecurity + #crypto + crime + crypto + cyber", n=1000, since="2015-01-01", lang = "en", resultType="mixed") # mixed results includes popular + real time results
TweetsDF<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="#cybersecurity + #crypto", n=500, since="2015-01-01", lang = "en", resultType="mixed") # mixed results includes popular + real time results
TweetsDF<- twListToDF(Search1)
########## Place Tweets in a new file ###################
FName = "Crypto_Tweets_R_raw.txt"
## Start the file
MyFile <- file(FName)
## Write Tweets to file
cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
close(MyFile)
TweetsDF = twListToDF(Search1)
TweetsDF$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF$text) # remove alphanumeric characters
TweetsDF$text <- gsub("https\\S*", "",TweetsDF$text) # remove hyperlinks
TweetsDF$text <- gsub("&amp", "and",TweetsDF$text) # replace ampersand symbol with "and"
View(TweetsDF)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search2<-twitteR::searchTwitter(searchString="#cybersecurity + #crypto", since="2012-01-01", lang = "en", resultType="popular") # mixed results includes popular + real time results
TweetsDF2<- twListToDF(Search1)
########## Place Tweets in a new file ###################
#FName = "Crypto_Tweets_R_raw.txt"
## Start the file
#MyFile <- file(FName)
## Write Tweets to file
#cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
#close(MyFile)
TweetsDF2 = twListToDF(Search2)
View(TweetsDF2)
TweetsDF[text][1]
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search2<-twitteR::searchTwitter(searchString="cyberattack + crypto", lang = "en", resultType="popular") # mixed results includes popular + real time results
TweetsDF2<- twListToDF(Search1)
########## Place Tweets in a new file ###################
#FName = "Crypto_Tweets_R_raw.txt"
## Start the file
#MyFile <- file(FName)
## Write Tweets to file
#cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
#close(MyFile)
TweetsDF2 = twListToDF(Search2)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search2<-twitteR::searchTwitter(searchString="cyber + crypto", lang = "en", resultType="popular") # mixed results includes popular + real time results
TweetsDF2<- twListToDF(Search1)
########## Place Tweets in a new file ###################
#FName = "Crypto_Tweets_R_raw.txt"
## Start the file
#MyFile <- file(FName)
## Write Tweets to file
#cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
#close(MyFile)
TweetsDF2 = twListToDF(Search2)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search2<-twitteR::searchTwitter(searchString="cyber + crypto", lang = "en", resultType="popular") # mixed results includes popular + real time results
TweetsDF2<- twListToDF(Search2)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search2<-twitteR::searchTwitter(searchString="crypto", lang = "en", n=500 resultType="popular") # mixed results includes popular + real time results
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search2<-twitteR::searchTwitter(searchString="crypto", lang = "en", n=500, resultType="popular") # mixed results includes popular + real time results
TweetsDF2<- twListToDF(Search2)
########## Place Tweets in a new file ###################
#FName = "Crypto_Tweets_R_raw.txt"
## Start the file
#MyFile <- file(FName)
## Write Tweets to file
#cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
#close(MyFile)
TweetsDF2 = twListToDF(Search2)
TweetsDF2$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF2$text) # remove alphanumeric characters
TweetsDF2$text <- gsub("https\\S*", "",TweetsDF2$text) # remove hyperlinks
TweetsDF2$text <- gsub("&amp", "and",TweetsDF2$text) # replace ampersand symbol with "and"
View(TweetsDF2)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + attack + crime", n=10000, lang = "en", resultType="mixed") # mixed results includes popular and real time results
TweetsDF1<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + attack + crime", n=1000, lang = "en", resultType="mixed") # mixed results includes popular and real time results
TweetsDF1<- twListToDF(Search1)
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime", n=1000, lang = "en", resultType="mixed") # mixed results includes popular and real time results
TweetsDF1<- twListToDF(Search1)
########## Place Tweets in a new file ###################
#FName = "Crypto_Tweets_R_raw.txt"
## Start the file
#MyFile <- file(FName)
## Write Tweets to file
#cat(unlist(TweetsDF), " ", file=MyFile, sep="\n")
#close(MyFile)
TweetsDF1 = twListToDF(Search1)
TweetsDF1$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",TweetsDF1$text) # remove alphanumeric characters
TweetsDF1$text <- gsub("https\\S*", "",TweetsDF1$text) # remove hyperlinks
TweetsDF1$text <- gsub("&amp", "and",TweetsDF1$text) # replace ampersand symbol with "and"
View(TweetsDF1)
type(tweets.corpus)
data.frame(test)
### Load libraries here
library("selectr")
library("rvest")
library("xml2")
library(rtweet) # for scraping tweets
library(wordcloud2) # for generating really cool looking wordclouds
library(tm) # for text mining
library(tidyverse)
library(twitteR)
library(ROAuth)
library(jsonlite)
consumerKey = '05RsErguXYWBfMpmmZdZlbV6P'
consumerSecret = 'Vr50qRwylJGRr1TtANB6RalqT90dTuq8hlBvoT8WCnYTS5Ni70'
access_Token = '1512312564-pbSid3qWEdigyAalZcII1d2ZF4rQ2WkiYfHf60k'
access_Secret = 'O9XEwsekAJLKkn0HxZ0VhOE7sIJ9VQawNgde4hXhkE0rb'
### Properly parse our API keys
consumerKey=as.character(consumerKey)
consumerSecret=as.character(consumerSecret)
access_Token=as.character(access_Token)
access_Secret=as.character(access_Secret)
##################################################################
### Ensure the right URLs are stored to pull data
requestURL='https://api.twitter.com/oauth/request_token'
accessURL='https://api.twitter.com/oauth/access_token'
authURL='https://api.twitter.com/oauth/authorize'
# setup OAuth and scrape 15,000 tweets relating to crypto and crime
setup_twitter_oauth(consumerKey,consumerSecret,access_Token,access_Secret)
Search1<-twitteR::searchTwitter(searchString="crypto + crime", n=15000, lang = "en", resultType="mixed") # mixed results includes popular and real time results
Raw_Tweets_DF <- twListToDF(Search1)
########## Place Raw Tweets in a new file ###################
FName1 = "Crypto_Tweets_R_raw.txt"
## Start the file
MyFile1 <- file(FName1)
## Write Tweets to file
cat(unlist(Raw_Tweets_DF), " ", file=MyFile1, sep="\n")
close(MyFile1)
Raw_Tweets_DF<- twListToDF(Search1)
# cleaning raw tweets dataframe
Raw_Tweets_DF$text <- gsub("[^[:alnum:][:blank:]?&/\\-]", "",Raw_Tweets_DF$text) # remove alphanumeric characters
Raw_Tweets_DF$text <- gsub("https\\S*", "",Raw_Tweets_DF$text) # remove hyperlinks
Raw_Tweets_DF$text <- gsub("&amp", "and",Raw_Tweets_DF$text) # replace ampersand symbol with "and"
View(Raw_Tweets_DF)
#create a corpus to allow us clean the text column with tm library
tweets.corpus <- Corpus(VectorSource(TweetsDF$text))
tweets.corpus <- tweets.corpus %>%
tm_map(removeNumbers) %>% # removes numbers from text
tm_map(removePunctuation) %>% # removes punctuation from text
tm_map(stripWhitespace) %>% # trims the text of whitespace
tm_map(content_transformer(tolower)) %>% # convert text to lowercase
tm_map(removeWords,stopwords("english")) %>% # remove stopwords
tm_map(removeWords,stopwords("SMART")) # remove stopwords not removed from previous line
########## Place Clean Tweets in a new file ###################
FName2 = "Crypto_Tweets_R_clean.txt"
## Start the file
MyFile2 <- file(FName2)
## Write Tweets to file
Clean_Tweets_DF <- data.frame(text = sapply(tweets.corpus, as.character), stringsAsFactors = FALSE)
cat(unlist(Clean_Tweets_DF), " ", file=MyFile2, sep="\n")
close(MyFile2)
View(Clean_Tweets_DF)
myroll = function(p){
u <- runif(1)
x <- as.numeric(u < p)
return(x)
}
myattempts = function(p){
counter <- 0
while (myroll(p) == 0){
counter <- counter + 1
}
return(counter)
}
p=1/6
x=replicate(10000, sum(replicate(3,myattempts(p))))
worse_percentage = function(x){
worse_observ = 0
for (i in x) {
if (i >= 6) {
worse_observ = worse_observ + 1
}
}
return((worse_observ/10000)*100)
}
worse_percentage(x)
replicate(10,mean(rexp(20)))
sapply(rep(NA, 10), function(w){mean(rexp(20))})
